map(array, func)
  buf = ()
  push(buf, func(x)) for x in array
  buf
  
filter(array, func)
  buf = ()
  for x in array
    push(buf, x) if func(x)
  buf
  
reduce(array, func)
  buf = array[0]
  for x, i in array
    buf = func(buf, x) if i
  buf
  
concat()
  buf = ()
  for array in arguments
    push(buf, x) for x in array
  buf
  
zip(keys, values)
  buf = {}
  buf[key] = values[i] for key, i in keys
  buf
  
copy(old)
  map(old, @(x){x})
  
clone(value, times_)
  map(1..times_, @(x){value})
   
sort(array, fn = null)
  // default sort function
  if fn == null
    fn(a, b)
      a > b

  // bubble sort
  for i in 1..(length(array) - 1)
    for j in 0..i - 1
      if fn(array[j], array[i])
        temp = array[i]
        array[i] = array[j]
        array[j] = temp
  
  array
  
Unit(unit_, array)
  map(array, @(x){x * unit_})
  
Em(array)
  Unit(1em, array)
  
Rem(array)
  Unit(1rem, array)
  
Vw(array)
  Unit(1vw, array)
  
Vh(array)
  Unit(1vh, array)
  
Px(array)
  Unit(1px, array)
  
Fr(array)
  Unit(1fr, array)
  
Percent(array)
  Unit(1%, array)